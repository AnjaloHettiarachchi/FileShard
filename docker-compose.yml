version: "3.3"

services:
  api:
    build:
      context: .
    image: fileshard
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  file:
    build:
      context: .
    image: fileshard
    env_file: docker-compose.env
    environment:
      SERVICES: file
    depends_on:
      - nats
    networks:
      - internal
    deploy:
      replicas: 3

  #  fileChunk:
  #    build:
  #      context: .
  #    image: fileshard
  #    env_file: docker-compose.env
  #    environment:
  #      SERVICES: file-chunk
  #    depends_on:
  #      - nats
  #    networks:
  #      - internal

  #  fileChunkDuplicate:
  #    build:
  #      context: .
  #    image: fileshard
  #    env_file: docker-compose.env
  #    environment:
  #      SERVICES: file-chunk-duplicate
  #    depends_on:
  #      - nats
  #    networks:
  #      - internal

  mongo:
    image: mongo:4
    ports:
      - 27017:27017
    volumes:
      - data:/data/db
    networks:
      - internal

  redis:
    image: redis:alpine
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
